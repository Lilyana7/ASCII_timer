// ASCII_timer.cpp : This file contains the 'main' function. Program execution begins and ends there.
//

#include <iostream>
#include <windows.h>
using namespace std;

HANDLE console = GetStdHandle(STD_OUTPUT_HANDLE);
COORD CursorPosition;

void gotoxy(int x, int y)
{
    CursorPosition.X = x;
    CursorPosition.Y = y;
    SetConsoleCursorPosition(console, CursorPosition);

}
void ColorRand()
{
    int random;
    srand(time(0));
    random = rand() % 10 + 1;
    SetConsoleTextAttribute(console, random);
}
void ChangeTextColour(int iCoulorValue)
{
    SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), iCoulorValue);
}
void SetColorAndBackground(int ForgC, int BackC = 0)
{
    SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), ForgC | (BackC << 4));
}

const char* d0[11][10] = { "0","0","0","0","0","0","0","0","0","0",
                            "0"," "," "," "," "," "," "," "," ","0",
                            "0"," "," "," "," "," "," "," "," ","0",
                            "0"," "," "," "," "," "," "," "," ","0",
                            "0"," "," "," "," "," "," "," "," ","0",
                            "0"," "," "," "," "," "," "," "," ","0",
                            "0"," "," "," "," "," "," "," "," ","0",
                            "0"," "," "," "," "," "," "," "," ","0",
                            "0"," "," "," "," "," "," "," "," ","0",
                            "0"," "," "," "," "," "," "," "," ","0",
                            "0","0","0","0","0","0","0","0","0","0", };
const char* d1[11][10] = { " "," "," "," "," "," "," "," "," ","1",
                               " "," "," "," "," "," "," "," "," ","1",
                               " "," "," "," "," "," "," "," "," ","1",
                               " "," "," "," "," "," "," "," "," ","1",
                               " "," "," "," "," "," "," "," "," ","1",
                               " "," "," "," "," "," "," "," "," ","1",
                               " "," "," "," "," "," "," "," "," ","1",
                               " "," "," "," "," "," "," "," "," ","1",
                               " "," "," "," "," "," "," "," "," ","1",
                               " "," "," "," "," "," "," "," "," ","1",
                               " "," "," "," "," "," "," "," "," ","1", };
const char* d2[11][10] = { "2","2","2","2","2","2","2","2","2","2",
                           " "," "," "," "," "," "," "," "," ","2",
                           " "," "," "," "," "," "," "," "," ","2",
                           " "," "," "," "," "," "," "," "," ","2",
                           " "," "," "," "," "," "," "," "," ","2",
                           "2","2","2","2","2","2","2","2","2","2",
                           "2"," "," "," "," "," "," "," "," "," ",
                           "2"," "," "," "," "," "," "," "," "," ",
                           "2"," "," "," "," "," "," "," "," "," ",
                           "2"," "," "," "," "," "," "," "," "," ",
                           "2","2","2","2","2","2","2","2","2","2" };
const char* d3[11][10] = { "3","3","3","3","3","3","3","3","3","3",
                           " "," "," "," "," "," "," "," "," ","3",
                           " "," "," "," "," "," "," "," "," ","3",
                           " "," "," "," "," "," "," "," "," ","3",
                           " "," "," "," "," "," "," "," "," ","3",
                           "3","3","3","3","3","3","3","3","3","3",
                           " "," "," "," "," "," "," "," "," ","3",
                           " "," "," "," "," "," "," "," "," ","3",
                           " "," "," "," "," "," "," "," "," ","3",
                           " "," "," "," "," "," "," "," "," ","3",
                           "3","3","3","3","3","3","3","3","3","3" };
const char* d4[11][10] = { "4"," "," "," "," "," "," "," "," ","4",
                           "4"," "," "," "," "," "," "," "," ","4",
                           "4"," "," "," "," "," "," "," "," ","4",
                           "4"," "," "," "," "," "," "," "," ","4",
                           "4"," "," "," "," "," "," "," "," ","4",
                           "4","4","4","4","4","4","4","4","4","4",
                           " "," "," "," "," "," "," "," "," ","4",
                           " "," "," "," "," "," "," "," "," ","4",
                           " "," "," "," "," "," "," "," "," ","4",
                           " "," "," "," "," "," "," "," "," ","4",
                           " "," "," "," "," "," "," "," "," ","4", };
const char* d5[11][10] = { "5","5","5","5","5","5","5","5","5","5",
                           "5"," "," "," "," "," "," "," "," "," ",
                           "5"," "," "," "," "," "," "," "," "," ",
                           "5"," "," "," "," "," "," "," "," "," ",
                           "5"," "," "," "," "," "," "," "," "," ",
                           "5","5","5","5","5","5","5","5","5","5",
                           " "," "," "," "," "," "," "," "," ","5",
                           " "," "," "," "," "," "," "," "," ","5",
                           " "," "," "," "," "," "," "," "," ","5",
                           " "," "," "," "," "," "," "," "," ","5",
                           "5","5","5","5","5","5","5","5","5","5", };
const char* d6[11][10] = { "6","6","6","6","6","6","6","6","6","6 ",
                           "6"," "," "," "," "," "," "," "," "," ",
                           "6"," "," "," "," "," "," "," "," "," ",
                           "6"," "," "," "," "," "," "," "," "," ",
                           "6"," "," "," "," "," "," "," "," "," ",
                           "6","6","6","6","6","6","6","6","6","6",
                           "6"," "," "," "," "," "," "," "," ","6",
                           "6"," "," "," "," "," "," "," "," ","6",
                           "6"," "," "," "," "," "," "," "," ","6",
                           "6"," "," "," "," "," "," "," "," ","6",
                           "6","6","6","6","6","6","6","6","6","6", };
const char* d7[11][10] = { "7","7","7","7","7","7","7","7","7","7",
                           " "," "," "," "," "," "," "," "," ","7",
                           " "," "," "," "," "," "," "," "," ","7",
                           " "," "," "," "," "," "," "," "," ","7",
                           " "," "," "," "," "," "," "," "," ","7",
                           " "," "," "," "," "," "," "," "," ","7",
                           " "," "," "," "," "," "," "," "," ","7",
                           " "," "," "," "," "," "," "," "," ","7",
                           " "," "," "," "," "," "," "," "," ","7",
                           " "," "," "," "," "," "," "," "," ","7",
                           " "," "," "," "," "," "," "," "," ","7", };
const char* d8[11][10] = { "8","8","8","8","8","8","8","8","8","8",
                            "8"," "," "," "," "," "," "," "," ","8",
                            "8"," "," "," "," "," "," "," "," ","8",
                            "8"," "," "," "," "," "," "," "," ","8",
                            "8"," "," "," "," "," "," "," "," ","8",
                            "8","8","8","8","8","8","8","8","8","8",
                            "8"," "," "," "," "," "," "," "," ","8",
                            "8"," "," "," "," "," "," "," "," ","8",
                            "8"," "," "," "," "," "," "," "," ","8",
                            "8"," "," "," "," "," "," "," "," ","8",
                            "8","8","8","8","8","8","8","8","8","8", };
const char* d9[11][10] = { "9","9","9","9","9","9","9","9","9","9",
                            "9"," "," "," "," "," "," "," "," ","9",
                            "9"," "," "," "," "," "," "," "," ","9",
                            "9"," "," "," "," "," "," "," "," ","9",
                            "9"," "," "," "," "," "," "," "," ","9",
                            "9","9","9","9","9","9","9","9","9","9",
                            " "," "," "," "," "," "," "," "," ","9",
                            " "," "," "," "," "," "," "," "," ","9",
                            " "," "," "," "," "," "," "," "," ","9",
                            " "," "," "," "," "," "," "," "," ","9",
                            "9","9","9","9","9","9","9","9","9","9", };
const char* sep[11][10] = { " "," "," "," "," "," "," "," "," "," ",
                               " "," "," "," "," "," "," "," "," "," ",
                               " "," "," "," "," "," "," "," "," "," ",
                               " "," "," "," ","##"," "," "," "," "," ",
                               " "," "," "," "," "," "," "," "," "," ",
                               " "," "," "," "," "," "," "," "," "," ",
                               " "," "," "," ","##"," "," "," "," "," ",
                               " "," "," "," "," "," "," "," "," "," ",
                               " "," "," "," "," "," "," "," "," "," ",
                               " "," "," "," "," "," "," "," "," "," ",
                               " "," "," "," "," "," "," "," "," "," ", };

void printDigit(int no, int x, int y)
{
    for (int i = 0; i < 11; i++)
    {
        for (int j = 0; j < 10; j++)
        {

            switch (no)
            {
            case 0: gotoxy(x + j, y + i); ChangeTextColour(3); cout << d0[i][j]; break;
            case 1: gotoxy(x + j, y + i); ChangeTextColour(7); cout << d1[i][j]; break;
            case 2: gotoxy(x + j, y + i); ChangeTextColour(4); cout << d2[i][j]; break;
            case 3: gotoxy(x + j, y + i); ChangeTextColour(1); cout << d3[i][j]; break;
            case 4: gotoxy(x + j, y + i); ChangeTextColour(5); cout << d4[i][j]; break;
            case 5: gotoxy(x + j, y + i); ChangeTextColour(2); cout << d5[i][j]; break;
            case 6: gotoxy(x + j, y + i); ChangeTextColour(8); cout << d6[i][j]; break;
            case 7: gotoxy(x + j, y + i); ChangeTextColour(9); cout << d7[i][j]; break;
            case 8: gotoxy(x + j, y + i); ChangeTextColour(10); cout << d8[i][j]; break;
            case 9: gotoxy(x + j, y + i); ChangeTextColour(11); cout << d9[i][j]; break;
            case 10: gotoxy(x + j, y + i); ChangeTextColour(12); cout << sep[i][j]; break;
            }
        }
    }
}
void printTitle()
{
    ColorRand();
    cout << "     _    ____   ____ ___ ___   _____ _" << endl;
    cout << "    / \\  / ___| / ___|_ _|_ _| |_   _(_)_ __ ___   ___ _ __" << endl;
    cout << "   / _ \\ \\___ \\| |    | | | |    | | | | '_ ` _ \\ / _ \\ '__|" << endl;
    cout << "  / ___ \\ ___) | |___ | | | |    | | | | | | | | |  __/ |" << endl;
    cout << " /_/   \\_\\____/ \\____|___|___|   |_| |_|_| |_| |_|\\___|_|" << endl;
}


int main()
{

    printTitle();
    int hours = 0; int minutes = 0; int seconds;
    //  cout << "Hours: "; cin >> hours;
    //  cout << "Minutes: "; cin >> minutes;
    cout << "Seconds: "; cin >> seconds;
    while (seconds >= 59)
    {
        if (seconds > 59)
        {
            minutes++;
            seconds -= 60;
            if (minutes > 60)
            {
                hours++;
                minutes -= 60;

            }
        }
    }//cout <<seconds<<endl<< minutes<<endl << hours << endl;


    int gap = 11;
    int posX;
    int posY = 11;

    while (seconds != 0 || minutes != 0 || hours != 0)
    {
        system("cls");

        posX = 15;
        if (hours <= 9)
        {
            printDigit(0, posX, posY);
            printDigit(hours, posX += gap, posY);
        }
        else {
            printDigit(hours / 10, posX, posY);
            printDigit(hours % 10, posX += gap, posY);
        }

        printDigit(10, posX += gap, posY);


        if (minutes <= 9)
        {
            printDigit(0, posX += gap, posY);
            printDigit(minutes, posX += gap, posY);
        }
        else {
            printDigit(minutes / 10, posX += gap, posY);
            printDigit(minutes % 10, posX += gap, posY);
        }

        printDigit(10, posX += gap, posY);


        if (seconds <= 9) {
            printDigit(0, posX += gap, posY);
            printDigit(seconds, posX += gap, posY);
        }
        else {
            printDigit(seconds / 10, posX += gap, posY);
            printDigit(seconds % 10, posX += gap, posY);
        }

        if (hours == 0 && minutes == 0 && seconds == 0)
        {
            break;
        }
        if (seconds == 0 && minutes == 0)
        {
            hours--;
            minutes = 60;
        }
        if (seconds == 0)
        {
            minutes--;
            seconds = 60;
        }
        Sleep(1000);
        seconds--;
    }
    for (int i = 100; ; i = i + 50)
        Beep(i, 1000);

}
